descriptives <- thresh %>%
group_by(condition)%>%
dplyr::summarise(meanThresh = mean(threshold),
sdThresg = sd(threshold))
View(descriptives)
knitr::opts_chunk$set(echo = TRUE)
descriptives <- thresh %>%
group_by(condition)%>%
dplyr::summarise(meanThresh = mean(threshold),
sdThresh = sd(threshold))
knitr::opts_chunk$set(echo = TRUE)
ggplot(thresh, aes(x = condition, y = thresh))+
geom_boxplot()
knitr::opts_chunk$set(echo = TRUE)
ggplot(thresh, aes(x = condition, y = threshold))+
geom_boxplot()
knitr::opts_chunk$set(echo = TRUE)
ggplot(thresh, aes(group = condition, color = condition, y = threshold))+
geom_boxplot()
knitr::opts_chunk$set(echo = TRUE)
ggplot(thresh, aes(group = as.factor(condition), color = as.actor(condition), y = threshold))+
geom_boxplot()
knitr::opts_chunk$set(echo = TRUE)
ggplot(thresh, aes(group = as.factor(condition), color = as.factor(condition), y = threshold))+
geom_boxplot()
?shapiro_test
??shapiro_test
knitr::opts_chunk$set(echo = TRUE)
library(rstatix)
knitr::opts_chunk$set(echo = TRUE)
thresh %>%
group_by(condition)%>%
shapiro_test(threshold)
knitr::opts_chunk$set(echo = TRUE)
cs.aov <- anova_test(data = thresh, dv = threshold, wid = ppid, within = condition)
knitr::opts_chunk$set(echo = TRUE)
get_anova_table(cs.aov)
knitr::opts_chunk$set(echo = TRUE)
pwc <- thresh %>%
pairwise_t_test(
threshold ~ condition, paired = TRUE,
p.adjust.method = "bonferroni"
)
pwc
?pairwise.t.test
knitr::opts_chunk$set(echo = TRUE)
pwc <- thresh %>%
pairwise_t_test(
threshold ~ condition, paired = TRUE,
p.adjust.method = "BH"
)
pwc
knitr::opts_chunk$set(echo = TRUE)
test <- data %>%
filter(ppid != 9 & condition != 2)
View(test)
knitr::opts_chunk$set(echo = TRUE)
test <- data %>%
filter(ppid != 9 && condition != 2)
knitr::opts_chunk$set(echo = TRUE)
test <- subset(data, ppid == 6)
View(test)
knitr::opts_chunk$set(echo = TRUE)
test <- subset(data, ppid == 6 & condition == 2)
View(runs)
View(test)
knitr::opts_chunk$set(echo = TRUE)
test <- subset(data, ppid != 6 & condition != 2)
View(test)
?subset
knitr::opts_chunk$set(echo = TRUE)
test <- !subset(data, ppid == 6 & condition == 2)
knitr::opts_chunk$set(echo = TRUE)
test <- subset(data, ppid == 6 | condition == 2)
View(test)
knitr::opts_chunk$set(echo = TRUE)
test <- subset(data, ppid != 6 | condition != 2)
knitr::opts_chunk$set(echo = TRUE)
data <- subset(data, ppid != 9 | condition != 2)
for (pp in pplist) {
#ppData <- data %>%
# filter(ppid == pp)
for (cond in condList) {
d <- data %>%
filter(ppid == pp) %>%
filter(condition == cond)# %>%
#filter(contrast > 10) #%>%
#filter(contrast < 21)
print(paste("pp = ", pp))
print(paste("cond = ", cond))
## check for long runs
# create lists of where perc correct = 0
runs = rle(d$percCorrect == 0)
# where do these runs exceed length 2
longRuns = which(runs$values == TRUE & runs$lengths >=2)
# check if these are present in the data, they are
longRun <- any(longRuns)
print(paste("long runs:", any(longRuns)))
if(longRun == TRUE){
# where do these runs end?
runs.lengths.cumsum = cumsum(runs$lengths)
ends = runs.lengths.cumsum[longRuns]
# where do these runs start?
newindex = ifelse(longRuns>1, longRuns-1, 0)
starts = runs.lengths.cumsum[newindex] + 1
if (0 %in% newindex) starts = c(1,starts)
print(paste("starts: ", starts, "ends: ", ends))
cut = max(ends) - 1
cutCon <- d$contrast[cut]
d <- d %>%
filter(contrast >= cutCon)
}
row = row + 1
xMAX <- max(d$contrast)
minPercCorr = min(d$percCorrect)
minContrast = min(d$contrast)
if (minPercCorr < p) {
fitOne <- quickpsy(d = d, x = contrast, k = totalCorrect, n = totalAttempt,
guess = g, lapses = TRUE, bootstrap = 'nonparametric',
xmin = xMIN, xmax = xMAX, fun = weibull_fun)
x <- plotcurves(fitOne)+
scale_x_continuous(limits = c(0, max(d$contrast)), breaks = seq(0, max(d$contrast), 1))+
scale_y_continuous(limits = c(0,1), breaks = seq(0, 1, 0.1))+
ggtitle(paste("pp", pp, ":", "condition ", cond))
show(x)
thresh[row, 1] <- pp
thresh[row, 2] <- cond
thresh[row, 3] <- first(d$sessionNumber)
thresh[row, 4] <- fitOne$thresholds[1]
thresh[row, 5] <- fitOne$thresholds[2]
thresh[row, 6] <- fitOne$thresholds[3]
thresh[row, 7] <- fitOne$thresholds[4]
} else{
#thresh[which(pplist == pp), 1] <- pp
#thresh[which(pplist == pp), 2] <- minContrast
#thresh[which(pplist == pp), 3] <- p
#thresh[which(pplist == pp), 4] <- minContrast
#thresh[which(pplist == pp), 5] <- minContrast
}
}
}
knitr::opts_chunk$set(echo = TRUE)
#pplist <- unique(data$ppid)
condList <- unique(data$condition)
#condList <- 0:1
pplist <- c(1:15)
thresh <- data.frame(matrix(
data = NA,
nrow = length(pplist)*length(condList),
ncol = 7))
cols <- c("ppid", "condition", "session",
"threshold", "percCorrect",
"threshLower", "threshUpper")
colnames(thresh) <- cols
rm(cols)
row = 0
data <- subset(data, ppid != 9 | condition != 2)
for (pp in pplist) {
#ppData <- data %>%
# filter(ppid == pp)
for (cond in condList) {
d <- data %>%
filter(ppid == pp) %>%
filter(condition == cond)# %>%
#filter(contrast > 10) #%>%
#filter(contrast < 21)
print(paste("pp = ", pp))
print(paste("cond = ", cond))
## check for long runs
# create lists of where perc correct = 0
runs = rle(d$percCorrect == 0)
# where do these runs exceed length 2
longRuns = which(runs$values == TRUE & runs$lengths >=2)
# check if these are present in the data, they are
longRun <- any(longRuns)
print(paste("long runs:", any(longRuns)))
if(longRun == TRUE){
# where do these runs end?
runs.lengths.cumsum = cumsum(runs$lengths)
ends = runs.lengths.cumsum[longRuns]
# where do these runs start?
newindex = ifelse(longRuns>1, longRuns-1, 0)
starts = runs.lengths.cumsum[newindex] + 1
if (0 %in% newindex) starts = c(1,starts)
print(paste("starts: ", starts, "ends: ", ends))
cut = max(ends) - 1
cutCon <- d$contrast[cut]
d <- d %>%
filter(contrast >= cutCon)
}
row = row + 1
xMAX <- max(d$contrast)
minPercCorr = min(d$percCorrect)
minContrast = min(d$contrast)
if (minPercCorr < p) {
fitOne <- quickpsy(d = d, x = contrast, k = totalCorrect, n = totalAttempt,
guess = g, lapses = TRUE, bootstrap = 'nonparametric',
xmin = xMIN, xmax = xMAX, fun = weibull_fun)
x <- plotcurves(fitOne)+
scale_x_continuous(limits = c(0, max(d$contrast)), breaks = seq(0, max(d$contrast), 1))+
scale_y_continuous(limits = c(0,1), breaks = seq(0, 1, 0.1))+
ggtitle(paste("pp", pp, ":", "condition ", cond))
show(x)
thresh[row, 1] <- pp
thresh[row, 2] <- cond
thresh[row, 3] <- first(d$sessionNumber)
thresh[row, 4] <- fitOne$thresholds[1]
thresh[row, 5] <- fitOne$thresholds[2]
thresh[row, 6] <- fitOne$thresholds[3]
thresh[row, 7] <- fitOne$thresholds[4]
} else{
#thresh[which(pplist == pp), 1] <- pp
#thresh[which(pplist == pp), 2] <- minContrast
#thresh[which(pplist == pp), 3] <- p
#thresh[which(pplist == pp), 4] <- minContrast
#thresh[which(pplist == pp), 5] <- minContrast
}
}
}
View(thresh)
knitr::opts_chunk$set(echo = TRUE)
thresh <- subset(thresh, ppid != 6 | condition != 2)
thresh <- subset(thresh, ppid != 6 | condition != 2)
descriptives <- thresh %>%
group_by(condition)%>%
dplyr::summarise(meanThresh = mean(threshold),
sdThresh = sd(threshold))
ggplot(thresh, aes(group = as.factor(condition), color = as.factor(condition), y = threshold))+
geom_boxplot()
library(rstatix)
thresh %>%
group_by(condition)%>%
shapiro_test(threshold)
cs.aov <- anova_test(data = thresh, dv = threshold, wid = ppid, within = condition)
get_anova_table(cs.aov)
pwc <- thresh %>%
pairwise_t_test(
threshold ~ condition, paired = TRUE,
p.adjust.method = "BH"
)
get_anova_table(cs.aov)
pairwise.t.test()
?pairwise.t.test
pwc <- thresh %>%
pairwise_t_test(
threshold ~ condition, paired = TRUE,
p.adjust.method = "BH"
)
knitr::opts_chunk$set(echo = TRUE)
c0 <- thresh %>% filter(condition == 0)
knitr::opts_chunk$set(echo = TRUE)
c1 <- thresh %>% filter(condition == 1)
knitr::opts_chunk$set(echo = TRUE)
t.test(c0$threshold, c1$threshold)
knitr::opts_chunk$set(echo = TRUE)
library(lme4)
knitr::opts_chunk$set(echo = TRUE)
library(lmerTest)
knitr::opts_chunk$set(echo = TRUE)
lmer(threshold ~ condition + (1|ppid),
data = thresh)
knitr::opts_chunk$set(echo = TRUE)
lm <- lmer(threshold ~ condition + (1|ppid),
data = thresh)
knitr::opts_chunk$set(echo = TRUE)
summary(lm)
knitr::opts_chunk$set(echo = TRUE)
test <- thresh %>%
filter(condition =! 2)
knitr::opts_chunk$set(echo = TRUE)
test <- thresh %>%
filter(condition != 2)
knitr::opts_chunk$set(echo = TRUE)
lm <- lmer(threshold ~ condition + (1|ppid),
data = test)
summary(lm)
knitr::opts_chunk$set(echo = TRUE)
lmDF <- thresh %>%
mutate(fullBlur = case_when(
condition == 2 ~ 0,
TRUE ~ 1
))
View(lmDF)
knitr::opts_chunk$set(echo = TRUE)
lmDF <- thresh %>%
mutate(fullBlur = case_when(
condition == 2 ~ 2/3,
TRUE ~ -1/3
),
monoBlur = case_when(
condition == 2 ~ 0,
condition == 1 ~ 1/2,
condition == 0 ~ -1/2
)
)
knitr::opts_chunk$set(echo = TRUE)
lmDF$condition <- as.factor(lmDF$condition)
knitr::opts_chunk$set(echo = TRUE)
levels(d$condition)
knitr::opts_chunk$set(echo = TRUE)
lmDF <- thresh %>%
mutate(fullBlur = case_when(
condition == 2 ~ -2/3,
TRUE ~ 1/3
),
monoBlur = case_when(
condition == 2 ~ 0,
condition == 1 ~ -1/2,
condition == 0 ~ 1/2
)
)
bino_vs_lessDeg <- c(-2/3, 1/3, 1/3)
low_vs_medium <- c(0, 1/2, -1/2)
contrasts(d$contrast) <- cbind(high_vs_degraded, low_vs_medium)
knitr::opts_chunk$set(echo = TRUE)
full_vs_mono <- c(0, 1/2, -1/2)
knitr::opts_chunk$set(echo = TRUE)
contrasts(d$contrast) <- cbind(bino_vs_lessDeg, full_vs_mono)
knitr::opts_chunk$set(echo = TRUE)
contrasts(lmDF$condition) <- cbind(bino_vs_lessDeg, full_vs_mono)
lmDF$condition <- as.factor(lmDF$condition)
contrasts(lmDF$condition) <- cbind(bino_vs_lessDeg, full_vs_mono)
lm <- lmer(threshold ~ condition + (1|ppid),
data = test)
summary(lm)
library(lme4)
library(lmerTest)
lmDF <- thresh %>%
mutate(fullBlur = case_when(
condition == 2 ~ -2/3,
TRUE ~ 1/3
),
monoBlur = case_when(
condition == 2 ~ 0,
condition == 1 ~ -1/2,
condition == 0 ~ 1/2
)
)
lmDF$condition <- as.factor(lmDF$condition)
levels(d$condition)
bino_vs_lessDeg <- c(-2/3, 1/3, 1/3)
full_vs_mono <- c(0, 1/2, -1/2)
contrasts(lmDF$condition) <- cbind(bino_vs_lessDeg, full_vs_mono)
# it will be most interseting to make the binocular blur condition the first ref group as we want to see if we can test the difference between 1 blur and no blur
lm <- lmer(threshold ~ condition + (1|ppid),
data = test)
summary(lm)
knitr::opts_chunk$set(echo = TRUE)
levels(lmDF$condition)
knitr::opts_chunk$set(echo = TRUE)
bino_vs_lessDeg <- c( 1/3, 1/3, -2/3)
full_vs_mono <- c(1/2, -1/2, 0)
contrasts(lmDF$condition) <- cbind(bino_vs_lessDeg, full_vs_mono)
lm <- lmer(threshold ~ condition + (1|ppid),
data = test)
summary(lm)
?contrasts
knitr::opts_chunk$set(echo = TRUE)
library(broom)
knitr::opts_chunk$set(echo = TRUE)
broom::tidy(lm)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
cs <- read.csv("../cleanData/csMLMdf.csv") %>%
select(id, condition, age, resID, CS)
va <- read.csv("../cleanData/vaMLMdf.csv")%>%
select(id, condition, VA)
pps <- as.list(unique(cs$id))
d <- read.csv("../cleanData/mlmData.csv")%>%
select(-X, -contrastHigh)%>%
mutate(degraded = case_when(
contrast == "High" ~ -2/3,
TRUE ~ 1/3
))%>%
mutate(lowContrast = case_when(
contrast == "High" ~ 0,
contrast == "Medium" ~ -1/2,
contrast == "Low" ~ 1/2
))%>%
rename(id = Participant.Private.ID) %>%
filter(id %in% pps) # double check no extra particiapnts are in the data
d <- left_join(d, cs, by = c("id", "condition"))
d <- left_join(d, va, by = c("id", "condition"))
d$id <- as.factor(d$id)
d$contrast <- as.factor(d$contrast)
d$resID <- as.factor(d$resID)
levels(d$contrast)
high_vs_degraded <- c(-2/3, 1/3, 1/3)
low_vs_medium <- c(0, 1/2, -1/2)
contrasts(d$contrast) <- cbind(high_vs_degraded, low_vs_medium)
library(lme4)
library(lmerTest)
library(car)
library(MASS)
ggplot(d, aes(x = absAngError, group = contrast, color = contrast))+
geom_density()+
facet_grid(~condition)
gauError <- lmer(absAngError ~ (1|id),
data = d)
summary(gauError)
gauCond <- lmer(absAngError ~ condition + (1|id),
data = d)
summary(gauCond)
anova(gauCond, gauError)
gauFlow <- lmer(absAngError ~ condition + contrast + (1|id),
data = d)
summary(gauFlow)
anova(gauFlow, gauCond)
knitr::opts_chunk$set(echo = TRUE)
levels(lmDF$condition)
knitr::opts_chunk$set(echo = TRUE)
bino_vs_lessDeg <- c( 1/3, 1/3, -2/3)
full_vs_mono <- c(-1/2, 1/2, 0)
contrasts(lmDF$condition) <- cbind(bino_vs_lessDeg, full_vs_mono)
lm <- lmer(threshold ~ condition + (1|ppid),
data = test)
knitr::opts_chunk$set(echo = TRUE)
summary(lm)
knitr::opts_chunk$set(echo = TRUE)
lm <- lmer(threshold ~ condition + (1|ppid),
data = lmDF)
summary(lm)
knitr::opts_chunk$set(echo = TRUE)
lm <- lmer(threshold ~ condition + (condition|ppid),
data = lmDF)
knitr::opts_chunk$set(echo = TRUE)
lm <- lmer(threshold ~ condition + session + (1|ppid),
data = lmDF)
summary(lm)
knitr::opts_chunk$set(echo = TRUE)
lm <- lmer(threshold ~ condition + session + condition:session +  (1|ppid),
data = lmDF)
summary(lm)
knitr::opts_chunk$set(echo = TRUE)
lm <- lmer(threshold ~ condition:session + (1|ppid),
data = lmDF)
summary(lm)
knitr::opts_chunk$set(echo = TRUE)
lm <- lmer(threshold ~ condition + session + condition:session + (1|ppid),
data = lmDF)
summary(lm)
knitr::opts_chunk$set(echo = TRUE)
lm <- lmer(threshold ~ condition + session + (1|ppid),
data = lmDF)
summary(lm)
knitr::opts_chunk$set(echo = TRUE)
lm <- lmer(threshold ~ condition + (1|ppid),
data = lmDF)
summary(lm)
View(chart)
chart%>%group_by(condition)%>%dplyr::summarise(mean = mean(va))
chart%>%group_by(condition)%>%dplyr::summarise(mean = mean(cs))
thresh%>%group_by(condition)%>%dplyr::summarise(mean = mean(threshold))
knitr::opts_chunk$set(echo = TRUE)
test <- thresh %>%
mutate(cs = 2 - log10(1/threshold))
View(test)
knitr::opts_chunk$set(echo = TRUE)
test <- thresh %>%
mutate(cs = 2 + log10(1/threshold))
View(test)
knitr::opts_chunk$set(echo = TRUE)
thresh <- thresh %>%
mutate(cs = 2 + log10(1/threshold))
lmDF <- thresh %>%
mutate(fullBlur = case_when(
condition == 2 ~ -2/3,
TRUE ~ 1/3
),
monoBlur = case_when(
condition == 2 ~ 0,
condition == 1 ~ -1/2,
condition == 0 ~ 1/2
)
)
lmDF$condition <- as.factor(lmDF$condition)
levels(lmDF$condition)
bino_vs_lessDeg <- c( 1/3, 1/3, -2/3)
full_vs_mono <- c(-1/2, 1/2, 0)
contrasts(lmDF$condition) <- cbind(bino_vs_lessDeg, full_vs_mono)
knitr::opts_chunk$set(echo = TRUE)
lm <- lmer(cs ~ condition + (1|ppid),
data = lmDF)
summary(lm)
thresh%>%group_by(condition)%>%dplyr::summarise(mean = mean(threshold))
thresh%>%group_by(condition)%>%dplyr::summarise(mean = mean(cs))
View(data)
knitr::opts_chunk$set(echo = TRUE)
thresh <- thresh %>%
rename(cs = gorillaCS)
knitr::opts_chunk$set(echo = TRUE)
thresh <- thresh %>%
rename(gorillaCS = cs)
knitr::opts_chunk$set(echo = TRUE)
combDF <- full_join(thresh, chart, by = c("ppid", "condition"))
knitr::opts_chunk$set(echo = TRUE)
ggplot(combDF, aes(x = cs, y = gorillaCS))+
geom_point()
knitr::opts_chunk$set(echo = TRUE)
ggplot(combDF, aes(x = cs, y = gorillaCS))+
geom_point()+
geom_smooth(method = lm)
knitr::opts_chunk$set(echo = TRUE)
ggplot(combDF, aes(x = cs, y = gorillaCS))+
geom_point()+
geom_smooth(method = "lm")
knitr::opts_chunk$set(echo = TRUE)
cor.test(combDF$gorillaCS, combDF$cs)
knitr::opts_chunk$set(echo = TRUE)
library(blandr)
knitr::opts_chunk$set(echo = TRUE)
blandr.draw(combDF$gorillaCS, combDF$cs)
